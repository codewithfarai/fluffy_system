---
- name: Deploy Traefik Reverse Proxy
  hosts: managers[0]
  become: yes
  vars:
    traefik_stack_name: traefik
    traefik_version: "v3.0"
    acme_email: "faraiwande@gmail.com"
    traefik_domain: "traefik.afroforgelabs.com"
    
  tasks:
    - name: Create Traefik directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /opt/docker/stacks/traefik
        - /opt/docker/stacks/traefik/data
        - /opt/docker/stacks/traefik/data/configurations
        - /opt/docker/stacks/traefik/logs

    - name: Create Traefik configuration file
      copy:
        content: |
          api:
            dashboard: true
            debug: true
          entryPoints:
            web:
              address: ":80"
              http:
                redirections:
                  entryPoint:
                    to: websecure
                    scheme: https
                    permanent: true
            websecure:
              address: ":443"
            traefik:
              address: ":8080"
            metrics:
              address: ":8082"
          providers:
            docker:
              endpoint: "unix:///var/run/docker.sock"
              swarmMode: true
              exposedByDefault: false
              network: traefik-public
            file:
              directory: /etc/traefik/dynamic
              watch: true
          certificatesResolvers:
            letsencrypt:
              acme:
                tlsChallenge: {}
                email: {{ acme_email }}
                storage: /etc/traefik/acme/acme.json
                caServer: https://acme-v02.api.letsencrypt.org/directory
          metrics:
            prometheus:
              addEntryPointsLabels: true
              addServicesLabels: true
              entryPoint: metrics
          log:
            level: INFO
            filePath: /var/log/traefik/traefik.log
          accessLog:
            filePath: /var/log/traefik/access.log
        dest: /opt/docker/stacks/traefik/data/traefik.yml
        mode: '0644'

    - name: Create dynamic configuration
      copy:
        content: |
          tls:
            options:
              default:
                sslProtocols:
                  - "TLSv1.2"
                  - "TLSv1.3"
                cipherSuites:
                  - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                  - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
                  - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
        dest: /opt/docker/stacks/traefik/data/configurations/dynamic.yml
        mode: '0644'

    - name: Create ACME file with correct permissions
      file:
        path: /opt/docker/stacks/traefik/data/acme.json
        state: touch
        mode: '0600'

    - name: Generate Traefik admin password
      shell: echo $(openssl rand -base64 32)
      register: traefik_password
      run_once: true

    - name: Create hashed password for Traefik dashboard
      shell: echo $(htpasswd -nbB admin "{{ traefik_password.stdout }}") | sed -e s/\\$/\\$\\$/g
      register: traefik_hashed_password

    - name: Create Traefik stack file
      copy:
        content: |
          version: '3.8'
          
          services:
            traefik:
              image: traefik:{{ traefik_version }}
              command:
                - --configFile=/etc/traefik/traefik.yml
              ports:
                - target: 80
                  published: 80
                  protocol: tcp
                  mode: host
                - target: 443
                  published: 443
                  protocol: tcp
                  mode: host
                - target: 8080
                  published: 8080
                  protocol: tcp
                  mode: host
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock:ro
                - traefik-data:/etc/traefik:rw
                - traefik-logs:/var/log/traefik:rw
              networks:
                - traefik-public
              deploy:
                mode: global
                placement:
                  constraints:
                    - node.labels.edge == true
                    - node.role == worker
                update_config:
                  parallelism: 1
                  delay: 10s
                restart_policy:
                  condition: on-failure
                  delay: 5s
                  max_attempts: 3
                labels:
                  - traefik.enable=true
                  - traefik.http.routers.traefik.rule=Host(`{{ traefik_domain }}`)
                  - traefik.http.routers.traefik.entrypoints=websecure
                  - traefik.http.routers.traefik.tls.certresolver=letsencrypt
                  - traefik.http.routers.traefik.service=api@internal
                  - traefik.http.routers.traefik.middlewares=auth
                  - traefik.http.middlewares.auth.basicauth.users={{ traefik_hashed_password.stdout }}
                  - traefik.http.services.traefik.loadbalancer.server.port=8080

          volumes:
            traefik-data:
              driver: local
              driver_opts:
                type: none
                o: bind
                device: /opt/docker/stacks/traefik/data
            traefik-logs:
              driver: local
              driver_opts:
                type: none
                o: bind
                device: /opt/docker/stacks/traefik/logs

          networks:
            traefik-public:
              external: true
        dest: /opt/docker/stacks/traefik/docker-compose.yml
        mode: '0644'

    - name: Deploy Traefik stack
      shell: docker stack deploy -c /opt/docker/stacks/traefik/docker-compose.yml {{ traefik_stack_name }}
      register: traefik_deploy_result

    - name: Wait for Traefik service to be ready
      shell: docker service ls --filter name={{ traefik_stack_name }}_traefik --format "{{ "{{" }}.Replicas{{ "}}" }}"
      register: traefik_replicas
      until: traefik_replicas.stdout.find("/") != -1 and traefik_replicas.stdout.split("/")[0] == traefik_replicas.stdout.split("/")[1]
      retries: 30
      delay: 10

    - name: Display Traefik deployment information
      debug:
        msg:
          - "Traefik deployed successfully!"
          - "Dashboard URL: https://{{ traefik_domain }}"
          - "Username: admin"
          - "Password: {{ traefik_password.stdout }}"
          - "Save this password securely!"

    - name: Save Traefik credentials
      copy:
        content: |
          Traefik Dashboard Credentials
          ============================
          URL: https://{{ traefik_domain }}
          Username: admin
          Password: {{ traefik_password.stdout }}
          
          Generated on: {{ ansible_date_time.iso8601 }}
        dest: /opt/docker/stacks/traefik/credentials.txt
        mode: '0600'